{"mappings":"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","sources":["calc.js"],"sourcesContent":["\nconst CHESS_MANUAL = {\"7,7\":{\"6,6\":{\"8,6\":{\"7,5\":{\"6,8\":{}},\"5,7\":{\"7,5\":{}},\"8,5\":{\"6,8\":{}},\"7,6\":{\"6,8\":{}},\"6,7\":{\"6,8\":{}},\"9,5\":{\"7,8\":{}},\"6,8\":{\"8,5\":{}},\"9,6\":{\"7,8\":{}},\"8,7\":{\"6,8\":{}},\"7,8\":{\"6,8\":{}},\"9,7\":{\"6,8\":{}},\"8,8\":{\"9,7\":{}},\"5,5\":{\"8,7\":{}},\"6,5\":{\"6,8\":{}},\"5,6\":{\"9,7\":{}}}},\"7,6\":{\"6,6\":{\"7,5\":{\"5,5\":{}},\"5,7\":{\"5,5\":{}},\"8,5\":{\"6,7\":{}},\"6,7\":{\"8,5\":{}},\"8,6\":{\"8,8\":{}},\"6,8\":{\"8,8\":{}},\"8,7\":{\"8,8\":{}},\"7,8\":{\"8,8\":{}},\"8,8\":{\"6,5\":{}},\"5,5\":{\"8,8\":{}},\"6,5\":{\"5,5\":{}},\"5,6\":{\"5,5\":{}}}},\"6,7\":{\"6,6\":{\"7,5\":{\"5,5\":{}},\"5,7\":{\"5,5\":{}},\"7,6\":{\"8,5\":{}},\"5,8\":{\"7,6\":{}},\"8,6\":{\"8,8\":{}},\"6,8\":{\"8,8\":{}},\"8,7\":{\"8,8\":{}},\"7,8\":{\"8,8\":{}},\"8,8\":{\"5,6\":{}},\"5,5\":{\"8,8\":{}},\"6,5\":{\"5,5\":{}},\"5,6\":{\"5,5\":{}}}},\"8,6\":{\"6,6\":{\"7,5\":{\"8,8\":{}},\"5,7\":{\"8,8\":{}},\"8,5\":{\"8,8\":{}},\"7,6\":{\"8,8\":{}},\"6,7\":{\"8,8\":{}},\"9,5\":{\"6,7\":{}},\"6,8\":{\"5,7\":{}},\"9,6\":{\"5,7\":{}},\"8,7\":{\"8,8\":{}},\"7,8\":{\"8,8\":{}},\"9,7\":{\"7,5\":{}},\"8,8\":{\"6,5\":{}},\"5,5\":{\"7,8\":{}},\"6,5\":{\"8,8\":{}},\"5,6\":{\"7,8\":{}}}},\"6,8\":{\"6,6\":{\"7,5\":{\"8,8\":{}},\"5,7\":{\"8,8\":{}},\"7,6\":{\"8,8\":{}},\"6,7\":{\"8,8\":{}},\"5,8\":{\"8,8\":{}},\"8,6\":{\"5,7\":{}},\"5,9\":{\"7,6\":{}},\"8,7\":{\"8,8\":{}},\"7,8\":{\"8,8\":{}},\"6,9\":{\"7,5\":{}},\"8,8\":{\"5,6\":{}},\"7,9\":{\"5,7\":{}},\"5,5\":{\"8,7\":{}},\"6,5\":{\"8,7\":{}},\"5,6\":{\"8,8\":{}}}},\"8,7\":{\"8,6\":{\"7,5\":{\"9,5\":{}},\"6,6\":{\"6,8\":{}},\"8,5\":{\"9,5\":{}},\"7,6\":{\"6,5\":{}},\"6,7\":{\"6,8\":{}},\"9,5\":{\"6,8\":{}},\"6,8\":{\"9,6\":{}},\"9,6\":{\"9,5\":{}},\"7,8\":{\"6,8\":{}},\"9,7\":{\"9,5\":{}},\"8,8\":{\"6,8\":{}},\"9,8\":{\"7,6\":{}}}},\"7,8\":{\"6,8\":{\"6,6\":{\"8,6\":{}},\"5,7\":{\"5,9\":{}},\"7,6\":{\"8,6\":{}},\"6,7\":{\"5,6\":{}},\"5,8\":{\"5,9\":{}},\"8,6\":{\"6,9\":{}},\"5,9\":{\"8,6\":{}},\"8,7\":{\"8,6\":{}},\"6,9\":{\"5,9\":{}},\"8,8\":{\"8,6\":{}},\"7,9\":{\"5,9\":{}},\"8,9\":{\"6,7\":{}}}},\"8,8\":{\"8,6\":{\"7,5\":{\"6,8\":{}},\"6,6\":{\"9,7\":{}},\"8,5\":{\"6,7\":{}},\"7,6\":{\"6,8\":{}},\"6,7\":{\"6,8\":{}},\"9,5\":{\"6,7\":{}},\"6,8\":{\"9,6\":{}},\"9,6\":{\"6,8\":{}},\"8,7\":{\"6,8\":{}},\"7,8\":{\"6,8\":{}},\"9,7\":{\"6,8\":{}},\"7,9\":{\"9,7\":{}},\"9,8\":{\"6,8\":{}},\"8,9\":{\"7,5\":{}},\"9,9\":{\"7,6\":{}}}}}}\n\n\n\nconst b2 = (n) => {\n    return 1 << (n + 1);\n}\nconst sum = (arr) => {\n    let s = 0;\n    arr.forEach(o => s += o);\n    return s;\n}\nconst INF = b2(19);\nconst SHAPE = {\n    \"ooooo\": [INF, 11],\n\n    //活4\n    \"_oooo_\": [b2(14), 10],\n\n    //眠4\n    \"oooo_\": [b2(9), 9],\n    \"ooo_o\": [b2(9), 9],\n    \"oo_oo\": [b2(9), 9],\n    \"o_ooo\": [b2(9), 9],\n    \"_oooo\": [b2(9), 9],\n\n    //活3\n    \"__ooo__\": [b2(9), 8],\n\n    //半活3  先手能成活4\n    \"_ooo__\": [b2(8), 7],\n    \"_oo_o_\": [b2(8), 7],\n    \"_o_oo_\": [b2(8), 7],\n\n    //眠3\n    \"ooo__\": [b2(7), 6],\n    \"oo_o_\": [b2(7), 6],\n    \"oo__o\": [b2(7), 6],\n    \"o_oo_\": [b2(7), 6],\n    \"o_o_o\": [b2(7), 6],\n    \"o__oo\": [b2(7), 6],\n    \"_ooo_\": [b2(7), 6],\n    \"_oo_o\": [b2(7), 6],\n    \"_o_oo\": [b2(7), 6],\n    \"__ooo\": [b2(7), 6],\n\n    //活2\n    \"___oo___\": [b2(7), 5],\n\n    //半活2\n    \"__oo___\": [b2(6), 4],\n    \"__o_o__\": [b2(6), 4],\n\n    //眠2\n    \"_oo__\": [b2(5), 3],\n    \"__oo_\": [b2(5), 3],\n    \"_o_o_\": [b2(5) - 1, 3],\n    \"oo___\": [b2(5) - 2, 3],\n    \"o_o__\": [b2(5) - 2, 3],\n    \"o__o_\": [b2(5) - 2, 3],\n    \"o___o\": [b2(5) - 2, 3],\n    \"_o__o\": [b2(5) - 2, 3],\n    \"__o_o\": [b2(5) - 2, 3],\n    \"___oo\": [b2(5) - 2, 3],\n\n    //活1\n    \"____o____\": [b2(5), 2],\n\n    //眠1\n    \"__o__\": [b2(3), 1],\n    \"_o___\": [b2(3) - 1, 1],\n    \"___o_\": [b2(3) - 1, 1],\n    \"o____\": [b2(3) - 2, 1],\n    \"____o\": [b2(3) - 2, 1],\n}\n\nconst create2DArr = (w, h, v) => {\n    let arr = [];\n    for (let y = 0; y < h; y++) {\n        arr[y] = []\n        for (let x = 0; x < w; x++) {\n            arr[y][x] = v;\n        }\n    }\n    return arr;\n}\nconst changeRound = (round, x, y, t) => {\n    for (let dy = -2; dy <= 2; dy++) {\n        for (let dx = -2; dx <= 2; dx++) {\n            let nowX = x + dx;\n            let nowY = y + dy;\n            if (nowX < 0 || nowX >= round[0].length || nowY < 0 || nowY >= round.length) {\n                continue;\n            }\n            round[nowY][nowX] += t;\n        }\n    }\n}\nlet DXY = [[1, 0], [1, 1], [0, 1], [-1, 1]];\nconst getShapes = (points, x, y, d) => {\n    if (points[y][x] == -1) {\n        return [];\n    }\n    let color = points[y][x];\n    let shapes = [];\n    for (let t = 0; t < 4; t++) {\n        if (d !== undefined && t != d) {\n            continue;\n        }\n        let line = \"o\";\n        for (let i = 1; i <= 4; i++) {\n            let xx = x + i * DXY[t][0];\n            let yy = y + i * DXY[t][1];\n            if (xx < 0 || xx >= points[0].length || yy < 0 || yy >= points.length || points[yy][xx] == 1 - color) {\n                break;\n            } else if (points[yy][xx] == color) {\n                line += \"o\"\n            } else {\n                line += \"_\"\n            }\n        }\n        for (let i = -1; i >= -4; i--) {\n            let xx = x + i * DXY[t][0];\n            let yy = y + i * DXY[t][1];\n            if (xx < 0 || xx >= points[0].length || yy < 0 || yy >= points.length || points[yy][xx] == 1 - color) {\n                break;\n            } else if (points[yy][xx] == color) {\n                line = \"o\" + line;\n            } else {\n                line = \"_\" + line;\n            }\n        }\n        shapes[t] = line;\n    }\n    return shapes;\n}\nconst getGrade = (points, x, y, d) => {\n    let grade = [0, 0, 0, 0, 0];\n    if (points[y][x] == -1) {\n        return grade;\n    }\n    let shapes = getShapes(points, x, y, d);\n    for (let i = 0; i < 4; i++) {\n        if (!shapes[i]) {\n            continue;\n        }\n        for (let s in SHAPE) {\n            if (shapes[i].indexOf(s) != -1) {\n                grade[i] = SHAPE[s][0];\n                grade[4] += grade[i];\n                break;\n            }\n        }\n    }\n    return grade;\n}\n\nconst print = (name, arr2d, getValue) => {\n    console.log(getValue)\n    let result = \"------------------------\\n\";\n    result += `-----------${name}-------------\\n`;\n    for (let y = 0; y < arr2d.length; y++) {\n        for (let x = 0; x < arr2d[0].length; x++) {\n            result += (getValue ? getValue(arr2d[y][x]) : arr2d[y][x]) + \"\\t\"\n        }\n        result += \"\\n\"\n    }\n    console.log(result)\n}\n\nconst foreach = (arr2d, handler) => {\n    let bkFlag = false;\n    const bk = () => bkFlag = true;\n    for (let y = 0; y < arr2d.length; y++) {\n        for (let x = 0; x < arr2d[0].length; x++) {\n            handler(x, y, arr2d[y][x], bk);\n            if (bkFlag) {\n                return;\n            }\n        }\n    }\n}\n\nconst BLACK = 1;\nconst WHITE = 0;\nconst EMPTY = -1;\nclass Chess {\n\n    constructor(points, current) {\n        if (!points || !points.length || points.length != points[0].length) {\n            throw new Error();\n        }\n        this.points = JSON.parse(JSON.stringify(points));\n        this.w = this.points.length;\n        this.current = current;\n        this.passArea = create2DArr(this.w, this.w, 0);\n        this.passArea[Math.floor(this.w / 2)][Math.floor(this.w / 2)] = 1;\n        foreach(this.points, (x, y, v) => v != EMPTY && changeRound(this.passArea, x, y, 1));\n\n        this.fullGrade = [0, 0];\n        this.gradeArea = create2DArr(this.w, this.w, [0, 0, 0, 0, 0]);\n        foreach(this.points, (x, y, v) => {\n            if (v == EMPTY) {\n                return;\n            }\n            this.gradeArea[y][x] = getGrade(this.points, x, y);\n            this.gradeArea[y][x][4] = sum(this.gradeArea[y][x]);\n            this.fullGrade[BLACK] += (v == BLACK ? 1 : -1) * this.gradeArea[y][x][4];\n            this.fullGrade[WHITE] += (v == WHITE ? 1 : -1) * this.gradeArea[y][x][4];\n        });\n\n        this.cm = CHESS_MANUAL;\n    }\n\n    getPoints() {\n        return JSON.parse(JSON.stringify(this.points));\n    }\n\n    isWin(x, y) {\n        if (this.points[y][x] == EMPTY) {\n            return false;\n        }\n        for (let shape of getShapes(this.points, x, y)) {\n            if (shape.indexOf(\"ooooo\") != -1) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    updateMiGrade(x, y) {\n        for (let t = 0; t < 4; t++) {\n            for (let i = -4; i <= 4; i++) {\n                if (i == 0) {\n                    continue;\n                }\n                let xx = x + i * DXY[t][0];\n                let yy = y + i * DXY[t][1];\n                if (xx >= 0 && xx < this.w && yy >= 0 && yy < this.w) {\n                    let grade = getGrade(this.points, xx, yy, t);\n                    let dGrade = grade[t] - this.gradeArea[yy][xx][t];\n                    let v = this.points[yy][xx];\n                    this.fullGrade[BLACK] += (v == BLACK ? 1 : -1) * dGrade;\n                    this.fullGrade[WHITE] += (v == WHITE ? 1 : -1) * dGrade;\n                    this.gradeArea[yy][xx][4] += dGrade;\n                    this.gradeArea[yy][xx][t] = grade[t];\n                }\n            }\n        }\n    }\n\n    putPoint(x, y, color, fixed) {\n        if (this.points[y][x] != EMPTY) {\n            return false;\n        }\n        this.points[y][x] = color;\n        changeRound(this.passArea, x, y, 1);\n        this.updateMiGrade(x, y);\n        this.gradeArea[y][x] = getGrade(this.points, x, y);\n        this.gradeArea[y][x][4] = sum(this.gradeArea[y][x]);\n        this.fullGrade[BLACK] += (color == BLACK ? 1 : -1) * this.gradeArea[y][x][4];\n        this.fullGrade[WHITE] += (color == WHITE ? 1 : -1) * this.gradeArea[y][x][4];\n\n        if (this.cm) {\n            this.cm = this.cm[`${x},${y}`];\n        }\n        return true;\n    }\n\n\n    removePoint(x, y) {\n        let color = this.points[y][x];\n        this.points[y][x] = EMPTY;\n        changeRound(this.passArea, x, y, -1);\n        this.updateMiGrade(x, y);\n        this.fullGrade[BLACK] += (color == BLACK ? -1 : 1) * this.gradeArea[y][x][4];\n        this.fullGrade[WHITE] += (color == WHITE ? -1 : 1) * this.gradeArea[y][x][4];\n        this.gradeArea[y][x] = [0, 0, 0, 0, 0];\n    }\n\n    // assess(color) {\n    //     let grade = 0;\n    //     for (let y = 0; y < this.w; y++) {\n    //         for (let x = 0; x < this.w; x++) {\n    //             let v = this.points[y][x];\n    //             if (v != EMPTY) {\n    //                 grade += (v == color ? 1 : -1) * this.gradeArea[y][x][4];\n    //             }\n    //         }\n    //     }\n    //     // foreach(this.points, (x, y, v) => v != EMPTY && (grade += (v == color ? 1 : -1) * this.gradeArea[y][x][4]));\n    //     return grade;\n    // }\n\n    calc(color, depth) {\n        if (color == BLACK && this.cm) {\n            for (let k in this.cm) {\n                let xy = k.split(\",\");\n                return { x: Number(xy[0]), y: Number(xy[1]) };\n            }\n        }\n        return this.subCalc(color, depth, null);\n    }\n\n    subCalc(color, depth, preMin) {\n        let maxG = null;\n        let p;\n        for (let y = 0; y < this.w; y++) {\n            for (let x = 0; x < this.w; x++) {\n                if (this.points[y][x] != EMPTY || this.passArea[y][x] == 0) {\n                    continue;\n                }\n                this.putPoint(x, y, color);\n                let pg = getGrade(this.points, x, y);\n                if (pg[4] >= INF) {\n                    this.removePoint(x, y);\n                    return { x, y, g: INF };\n                }\n                let g = depth == 1 ? this.fullGrade[1 - color] : this.subCalc(1 - color, depth - 1, maxG == null ? null : -maxG).g;\n                this.removePoint(x, y);\n                g = -g;\n                if (maxG == null || g > maxG) {\n                    maxG = g;\n                    p = { x, y };\n                }\n                if (preMin !== null && preMin !== undefined && maxG >= preMin) {\n                    return { x, y, g: INF };\n                }\n            }\n        }\n        return { ...p, g: maxG };\n    }\n}\n"],"names":[],"version":3,"file":"index.62cd4a25.js.map","sourceRoot":"/__parcel_source_root/"}